%
%  Vzor bibliografické databáze pro automatickou tvorbu seznamu referencí
%  pomocí BibTeXu
%
%  Doporučený software pro správu databáze literatury formátu *.bib:
%    JabRef, http://jabref.sourceforge.net/
%
%  POZOR:
%
%    *  Písmena v názvech publikací, jež je třeba tisknout vždy velká, se musejí psát
%       do složených závorek ({T}hailand, {HIV})
%
%  ===========================================================================

@article{Anselma06,
	Abstract = {In this paper, we define a principled approach to represent temporal constraints in clinical guidelines and to reason (i.e., perform inferences in the form of constraint propagation) on them. We consider different types of constraints, including composite and repeated actions, and propose different types of temporal functionalities (e.g., temporal consistency checking).},
	Author = {Anselma, Luca and Terenziani, Paolo and Montani, Stefania and Bottrighi, Alessio},
	ISSN = {0933-3657},
	Journal = {Artificial Intelligence In Medicine},
	Keywords = {Clinical guidelines, Temporal constraint representation, Temporal reasoning, Consistency-checking, Repeated/periodic actions},
	Number = {2},
	Pages = {171 - 195},
	Title = {Towards a comprehensive treatment of repetitions, periodicity and temporal constraints in clinical guidelines.},
	Volume = {38},
	Year = {2006},
}

@article{Fukunaga97,
	Abstract = {A number of successful applications of automated planning and scheduling applications to spacecraft operations have recently been reported in the literature. However, these applications have been one-of-a-kind applications that required a substantial amount of development effort. In this paper, we describe ASPEN (Automated Planning/Scheduling Environment), a modular, reconfigurable application framework which is capable of supporting a wide variety of planning and scheduling applications. We describe the architecture of ASPEN, as well as a number of current spacecraft control/operations applications in progress.},
	Author = {Fukunaga, A. and Rabideau, G. and Chien, S. and Yan, D.},
	ISSN = {0-7803-3741-7},
	Journal = {1997 IEEE Aerospace Conference, Aerospace Conference, 1997. Proceedings., IEEE},
	Keywords = {Application software, Technology planning, Space vehicles, Object oriented modeling, Space technology, Process planning, Data structures, Software reusability, Propulsion, Laboratories},
	Pages = {375},
	Title = {Towards an application framework for automated planning and scheduling.},
	Volume = {1},
	Year = {1997},
}

@article{Dechter91,
	Author = {Dechter, R. and Meiri, I. and Pearl, J.},
	ISSN = {00043702},
	Journal = {Artificial Intelligence},
	Number = {1-3},
	Pages = {61-95},
	Title = {Temporal constraint networks.},
	Volume = {49},
	Year = {1991},
}

@article{Gazinger04,
Abstract = {The logic of equality with uninterpreted functions (EUF) and its extensions have been widely applied to processor verification, by means of a large variety of progressively more sophisticated (lazy or eager) translations into propositional SAT. Here we propose a new approach, namely a general DPLL(X) engine, whose parameter X can be instantiated with a specialized solver Solver T for a given theory T, thus producing a system DPLL(T). We describe this DPLL(T) scheme, the interface between DPLL(X) and Solver T , the architecture of DPLL(X), and our solver for EUF, which includes incremental and backtrackable congruence closure algorithms for dealing with the built-in equality and the integer successor and predecessor symbols. Experiments with a first implementation indicate that our technique already outperforms the previous methods on most benchmarks, and scales up very well.},
Author = {Ganzinger, Harald and Hagen, George and Nieuwenhuis, Robert and Oliveras, Albert and Tinelli, Cesare},
ISSN = {978-3-540-27813-9},
Journal = {Computer Aided Verification : 16th International Conference, CAV 2004, Boston, MA, USA, July 13-17, 2004. Proceedings},
Keywords = {Computer Science, Theory of Computation, Software Engineering, Logic Design, Logics and Meanings of Programs, Mathematical Logic and Formal Languages, Artificial Intelligence (incl. Robotics)},
Pages = {175},
Title = {{DPLL(T)}: Fast Decision Procedures.},
Year = {2004},
}

@article{Davis60,
author = {Davis, Martin and Putnam, Hilary},
title = {A Computing Procedure for Quantification Theory},
year = {1960},
issue_date = {July 1960},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {7},
number = {3},
issn = {0004-5411},
url = {https://doi.org/10.1145/321033.321034},
doi = {10.1145/321033.321034},
journal = {J. ACM},
month = jul,
pages = {201–215},
numpages = {15}
}
  
@inproceedings{Cook71,
author = {Cook, Stephen A.},
title = {The Complexity of Theorem-Proving Procedures},
year = {1971},
isbn = {9781450374644},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800157.805047},
doi = {10.1145/800157.805047},
booktitle = {Proceedings of the Third Annual ACM Symposium on Theory of Computing},
pages = {151–158},
numpages = {8},
location = {Shaker Heights, Ohio, USA},
series = {STOC ’71}
}

@book{Mares17,
author = {Mareš, M. and Valla, T},
title = {Průvodce labyrintem algoritmů},
year = {2017},
publisher = {CZ.NIC},
isbn = {978-80-88168-19-5}
}


@article{Randal02,
Abstract = {In this paper, we present the logic of Counter Arithmetic with Lambda Expressions and Uninterpreted Functions (CLU). CLU generalizes the logic of equality with uninterpreted functions (EUF) with constrained lambda expressions, ordering, and successor and predecessor functions. In addition to modeling pipelined processors that EUF has proved useful for, CLU can be used to model many infinite-state systems including those with infinite memories, finite and infinite queues including lossy channels, and networks of identical processes. Even with this richer expressive power, the validity of a CLU formula can be efficiently decided by translating it to a propositional formula, and then using Boolean methods to check validity. We give theoretical and empirical evidence for the efficiency of our decision procedure. We also describe verification techniques that we have used on a variety of systems, including an out-of-order execution unit and the load-store unit of an industrial microprocesso},
Author = {Randal E., Bryant and Shuvendu K., Lahiri and Sanjit A., Seshia},
ISSN = {978-3-540-45657-5},
Journal = {Computer Aided Verification : 14th International Conference, CAV 2002 Copenhagen, Denmark, July 27–31, 2002 Proceedings},
Keywords = {Computer Science, Theory of Computation, Logics and Meanings of Programs, Software Engineering, Mathematical Logic and Formal Languages, Artificial Intelligence (incl. Robotics), Special Purpose and Application-Based Systems},
Pages = {78},
Title = {Modeling and Verifying Systems Using a Logic of Counter Arithmetic with Lambda Expressions and Uninterpreted Functions.},
Year = {2002},
}

@inbook{Nieuwenhuis05,
Abstract = {At CAV'04 we presented the DPLL(T) approach for satisfiability modulo theories T. It is based on a general DPLL(X) engine whose X can be instantiated with different theory solvers SolverT for conjunctions of literals. Here we go one important step further: we require SolverT to be able to detect all input literals that are T-consequences of the partial model that is being explored by DPLL(X). Although at first sight this may seem too expensive, we show that for difference logic the benefits compensate by far the costs. Here we describe and discuss this new version of DPLL(T), the DPLL(X) engine, and our SolverT for difference logic. The resulting very simple DPLL(T) system importantly outperforms the existing techniques for this logic. Moreover, it has very good scaling properties: especially on the larger problems it gives improvements of orders of magnitude w.r.t. the existing state-of-the-art tools. [ABSTRACT FROM AUTHOR]},
Author = {Nieuwenhuis, Robert and Oliveras, Albert},
Editor = {Etessami, Kousha and Rajamani, Sriram K.},
Booktitle = {Computer Aided Verification},
ISBN = {9783540272311},
Pages = {321-334},
Title = {DPLL(T) with Exhaustive Theory Propagation and Its Application to Difference Logic.},
Year = {2005}
}


@article{Moura04,
Abstract = {There is a large variety of algorithms for ground decision procedures, but their differences, in particular in terms of experimental performance, are not well studied. We compare the behavior of ground decision procedures by comparing the performance of a variety of technologies on benchmark suites with differing characteristics. Based on these experimental results, we discuss relative strengths and shortcomings of different systems.},
Author = {Moura, Leonardo and Rueß, Harald},
ISSN = {978-3-540-27813-9},
Journal = {Computer Aided Verification : 16th International Conference, CAV 2004, Boston, MA, USA, July 13-17, 2004. Proceedings},
Keywords = {Computer Science, Theory of Computation, Software Engineering, Logic Design, Logics and Meanings of Programs, Mathematical Logic and Formal Languages, Artificial Intelligence (incl. Robotics)},
Pages = {162},
Title = {An Experimental Evaluation of Ground Decision Procedures.},
Year = {2004},
}

@book{Schrijver86,
Author = {Schrijver, Alexander},
ISBN = {0-471-98232-6},
Publisher = {John Wiley \& Sons},
Title = {Theory of linear and integer programming.},
Year = {1986},
}

@online{slides,
Author = {Oliveras, Albert and Rodríguez-Carbonell, Enric},
Title = {Satisfiability Modulo Difference Logic},
howpublished = {\url{https://www.cs.bu.edu/faculty/kfoury/UNI-Teaching/CS512-Spring17/Lecture/2016.Oliveras+Rodriguez-Carbonell.Satisfiability_Modulo_Difference_Logic.lecture-slides.pdf}},
Addendum = {(accessed: 12.07.2020)}
}
